services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Browser-facing values (public host + TLS)
        VITE_REVERB_APP_KEY: ${REVERB_APP_KEY:-laravel}
        VITE_REVERB_HOST: www.triffnix.com
        VITE_REVERB_PORT: "443"
        VITE_REVERB_SCHEME: https
        VITE_REVERB_PATH: /reverb
        # Also provide PUSHER_* in case the code falls back to those names
        VITE_PUSHER_APP_KEY: ${REVERB_APP_KEY:-laravel}
        VITE_PUSHER_HOST: www.triffnix.com
        VITE_PUSHER_PORT: "443"
        VITE_PUSHER_SCHEME: https
        VITE_PUSHER_APP_CLUSTER: mt1
    image: wormholesystems/app:local
    env_file: .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - webroot:/var/www/html  
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    restart: unless-stopped

  worker:
    image: wormholesystems/app:local
    env_file: .env.docker
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    depends_on:
      app:
        condition: service_started
    volumes:
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    restart: unless-stopped

  scheduler:
    image: wormholesystems/app:local
    env_file: .env.docker
    command: php artisan schedule:work
    depends_on:
      app:
        condition: service_started
    volumes:
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    restart: unless-stopped

  # Laravel Reverb (WebSocket server)
  reverb:
    image: wormholesystems/app:local
    env_file: .env.docker
    command: php artisan reverb:start --port=8080 --host=0.0.0.0
    depends_on:
      app:
        condition: service_started
    volumes:
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      app:
        condition: service_started
      reverb:
        condition: service_started
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app_public:/var/www/html/public:ro
    restart: unless-stopped


  db:
    image: mariadb:11
    environment:
      MYSQL_DATABASE: wormholesystems
      MYSQL_USER: wormhole
      MYSQL_PASSWORD: wormhole
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "[ -S /run/mysqld/mysqld.sock ] || mysqladmin ping -h 127.0.0.1 --silent || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 40
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7-alpine

volumes:
  db_data:
  webroot:
  app_storage:
  app_cache:
  app_public:

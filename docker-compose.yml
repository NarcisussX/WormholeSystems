version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: wormholesystems/app:local
    env_file: .env.docker
    depends_on:
      - db
      - redis
    volumes:
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    networks: [net]

  worker:
    image: wormholesystems/app:local
    env_file: .env.docker
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    depends_on: [app, db, redis]
    volumes:
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    networks: [net]

  scheduler:
    image: wormholesystems/app:local
    env_file: .env.docker
    command: php artisan schedule:work
    depends_on: [app, db, redis]
    volumes:
      - app_storage:/srv/app/storage
      - app_cache:/srv/app/bootstrap/cache
    networks: [net]

  # Laravel Reverb (WebSocket server)
  reverb:
    image: wormholesystems/app:local
    env_file: .env.docker
    command: php artisan reverb:start --port=8080 --host=0.0.0.0
    depends_on: [app]
    networks: [net]

  nginx:
    image: nginx:1.27-alpine
    depends_on: [app, reverb]
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - app_public:/srv/app/public:ro
    ports:
      - "80:80"
      # if terminating TLS on this box:
      # - "443:443"
    networks: [net]

  db:
    image: mariadb:11
    environment:
      MYSQL_DATABASE: wormholesystems
      MYSQL_USER: wormhole
      MYSQL_PASSWORD: wormhole
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks: [net]

  redis:
    image: redis:7-alpine
    networks: [net]

volumes:
  db_data:
  app_storage:
  app_cache:
  app_public:

networks:
  net:
